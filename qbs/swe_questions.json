[{"t":"Waterfall (plan driven), Incremental (specification, dev, and validation interleaved, plan or agile), Integration and Configuration (system assembled from existing configurable components, plan or agile)","c":["A. Things software process descriptions include","B. Software process types","C. Software process models ","D. Software process models"],"a":2},{"t":"System prototyping (quick development mockup to test requirements), Incremental delivery (system increments delivered to customer for approval/comments)","c":["A. Testing stages","B. Software process models","C. Ways of coping with change ","D. Design activities"],"a":2},{"t":"Products roles pre/post conditions","c":["A. Things software process descriptions include ","B. Software process models","C. Things all software processes involve","D. Software process types"],"a":0},{"t":"Architectural design (overall system structure)<br>Database design (design data structures and how they are rep'd in db)<br>Interface design (define interfaces between components)<br>Component selection and design (search for reusable components)","c":["A. 4 Design activities ","B. 8 Design activities","C. 3 Design activities","D. 3 Testing stages"],"a":0},{"t":"Process measurement process analysis process change","c":["A. 3 Software process models","B. 3 Process improvement activities ","C. 5 Waterfall method phases","D. 2 Software process types"],"a":1},{"t":"Reqs specification software discovery and eval reqs refinement app system config component adaptation and integration","c":["A. Key process stages of reuse-oriented software engineering ","B. Steps for conducting a market analysis in software development","C. Phases of traditional waterfall model in software engineering","D. Fundamental principles of agile project management"],"a":0},{"t":"Which of the following software development models is characterized by dividing the project into small, manageable increments, with each increment adding functionality to the software product?","c":["A. Waterfall Model","B. Spiral Model","C. Incremental Model","D. Big Bang Model"],"a":2},{"t":"Specification design/implementation validation evolution","c":["A. 4 Things all software processes involve","B. What is the software process?","C. 3 Things software process descriptions include ","D. 3 Process improvement activities"],"a":2},{"t":"Plan-driven (all activities planned in advance and progress is measured against this plan)<br>Agile (incremental planning, easier process changes to reflect changing customer requirements)<br>Select the correct term","c":["A. 3 Software process models","B. 2 Software process types ","C. 10 Software process types","D. 3 Things software process descriptions include"],"a":1},{"t":"Process of establishing what services are required and the constraints on the system's operation and dev","c":["A. 3 Things software process descriptions include","B. What is software specification? ","C. 3 Process improvement activities","D. What is the software process?"],"a":1},{"t":"A very influential agile method, developed in the late 1990s, that introduced a range of agile development techniques.","c":["A. Important agile fundamentals to remember when scaling","B. ScrumMaster","C. Questions to be asked when considering using agile methods","D. Extreme Programming"],"a":3},{"t":"What is the following <br>- User stories for specification<br>- Refactoring<br>- Test-first development<br>- Pair programming ?","c":["A. Practical and influential XP practices","B. Practical problems with Agile Methods","C. Agile methods and software maintenance concerns","D. Practices of Extreme Programming "],"a":3},{"t":"Practical problems with agile  is The informality of agile development is incompatible with the legal approach to contract definition that is commonly used in large companies","c":["A. True ","B. Fase"],"a":0},{"t":"Extreme Programming  is Agile methods are designed for small co-located teams yet much software development now involves worldwide distributed teams.  ","c":["A. True","B. Fase "],"a":1},{"t":"What is the following <br>- Test-first development<br>- Incremental test development from scenarios<br>- User involvement in test development and validation<br>- Automated test harnesses are used to run all component tests each time that a new release is built.?","c":["A. Problems with a test-first environment","B. Practical problems with Agile Methods","C. Practices of Extreme Programming","D. Extreme Programming Testing Features "],"a":3},{"t":"After Action Review (wrap-up)?","c":["A. Plan-driven development","B. Most important requirement for software systems","C. AAR ","D. Scrum"],"a":2},{"t":"What is the following  Incremental development is supported through small, frequent system releases.","c":["A. XP applied to the Agile Manifesto","B. Practices of Extreme Programming ","C. Practical problems with Agile Methods","D. Three phases of Scrum"],"a":1},{"t":"Three phases of Scrum is  Customer involvement means full-time customer engagement with the team.","c":["A. True","B. Fase "],"a":1},{"t":"Practices of Extreme Programming Maintaining simplicity through constant refactoring of code ","c":["A. True ","B. Fase"],"a":0},{"t":"What is the following <br>- Lack of product documentation<br>- Keeping customers involved<br>- Development team continuity","c":["A. Agile methods are useful for what two kinds of system development?","B. Problems with a test-first environment","C. Agile methods and software maintenance concerns ","D. Practical and influential XP practices"],"a":2},{"t":"An estimate of how much product backlog effort that a team can cover in a single sprint?","c":["A. Sprint","B. Velocity ","C. Five principles of Agile Methods","D. Scrum"],"a":1},{"t":"A development iteration. Sprints are usually 2-4 weeks long?","c":["A. Sprint ","B. Velocity","C. Five principles of Agile Methods","D. Scrum"],"a":0},{"t":"A daily meeting of the Scrum team that reviews progress and prioritizes work to be done that day. Ideally, this should be a short face-to-face meeting that includes the whole ?","c":["A. Sprint","B. Velocity","C. Five principles of Agile Methods","D. Scrum "],"a":3},{"t":"Program specification, design and implementation are inter-leaved ?","c":["A. Common characteristics of agile development ","B. XP applied to the Agile Manifesto","C. Why is it called Extreme Programming?","D. Problems with a test-first environment"],"a":0},{"t":"Agile development Minimal documentation - focus on working code","c":["A. True ","B. Fase"],"a":0},{"t":"The system is developed as a series of versions or increments with stakeholders involved in version specification and evaluation","c":["A. Common characteristics of agile development ","B. XP applied to the Agile Manifesto","C. Why is it called Extreme Programming?","D. Problems with a test-first environment"],"a":0},{"t":"Agile method that focuses on managing iterative development rather than specific agile practices?","c":["A. AAR","B. Velocity","C. Sprint","D. Scrum "],"a":3},{"t":"Scrum benefits is ?","c":["A. The product is broken down into a set of manageable and understandable chunks.","B. Unstable requirements do not hold up progress.","C. The whole team have visibility of everything and consequently team communication is improved.","D. All of above "],"a":3},{"t":"Specification, design, implementation and testing are inter-leaved and the outputs from the development process are decided through a process of negotiation during the software development process.","c":["A. Agile Development ","B. Why is it called Extreme Programming","C. Agile Manifesto Tenets","D. Three phases of Scrum"],"a":0},{"t":"Rapid development and delivery?","c":["A. Common characteristics of agile development","B. Sprint","C. Practical and influential XP practices","D. Most important requirement for software systems "],"a":3},{"t":"Problems with test-first development is Some tests can be very difficult to write incrementally?","c":["A. True ","B. Fase"],"a":0},{"t":"XP is it difficult to judge the completeness of a set of tests?","c":["A. True","B. Fase "],"a":1},{"t":"Programmers prefer programming to testing and sometimes they take short cuts when writing tests?","c":["A. Extreme Programming Testing Features","B. Problems with a test-first denvironment ","C. XP applied to the Agile Manifesto","D. Practices of Extreme Programming"],"a":1},{"t":"Based around separate development stages with the outputs to be produced at each of these stages planned in advance?","c":["A. Plan-driven development ","B. Five principles of Agile Methods","C. Scaling up agile methods","D. Practical and influential XP practices"],"a":0},{"t":"Pair programming involves programmers working in pairs, developing code together?","c":["A. Pair Programming ","B. Plan-driven development","C. User Stories","D. Product Backlog"],"a":0},{"t":"Person responsible for ensuring that the Scrum process is followed and guides the team in the effective use of Scrum. He or she is responsible for interfacing with the rest of the company?","c":["A. Important agile fundamentals to remember when scaling","B. Refactoring","C. Scrum Master ","D. Test-first development"],"a":2},{"t":"Concerned with using agile methods for developing large software systems that cannot be developed by a small team?","c":["A. Plan-driven development","B. \"Scaling out\" agile methods","C. Five principles of Agile Methods","D. \"Scaling up\" agile methods "],"a":3},{"t":"Extreme programming practices is ?","c":["A. Incremental planning and  Small releases and Simple design and Test-first development and Refactoring","B. Pair programming and Collective ownership and Continuous integration","C. Sustainable pace and  On-site customer","D. All of above "],"a":3},{"t":"Flexible planning, frequent system releases, continuous integration, test-driven development and good team communications.?","c":["A. Important agile fundamentals to remember when scaling ","B. Questions to be asked when considering using agile methods","C. Extreme Programming","D. Test-first development"],"a":0},{"t":"Individuals and Interactions over processes and tools , Working software over comprehensive documentation ,Customer collaboration over contract negotiation ,Responding to change over following a plan","c":["A. Agile Development","B. Agile Manifesto ","C. Practices of Extreme Programming","D. Examples of refactoring"],"a":1},{"t":"Writing tests before code clarifies the requirements to be implemented.?","c":["A. Refactoring","B. Test-driven development ","C. Extreme Programming","D. Important agile fundamentals to remember when scaling"],"a":1},{"t":"User requirements are expressed as user stories or scenarios?","c":["A. Three phases of Scrum","B. Benefits of Scrum","C. Pair Programming","D. User Stories "],"a":3},{"t":"The \"to-do\" items which the Scrum team must tackle.","c":["A. Product Backlog ","B. Benefits of Scrum","C. Plan-driven development","D. Sprint"],"a":0},{"t":"False! A \"customer\" can be an organization from within the company as well.?","c":["A. T or F: A \"customer\" must be from an external source outside the company.","B. Agile methods and software maintenance concerns","C. T or F and Why?: Scaling agile methods for large systems is easy.","D. Practical and influential XP practices"],"a":0},{"t":"What is the software requirements document?","c":["A. A casual list of features that could be included in a software project.","B. A marketing brochure that describes the software's capabilities to potential clients.","C. The official document that defines the requirements that should be implemented by the system developers ","D. A technical manual that explains how to use the software after it is developed."],"a":2},{"t":"What is a use-case?","c":["A. A use-case is a list of all the software bugs that need to be fixed.","B. The process of managing changes to requirements during requirements specification and after the system has gone into use.","C. A use-case is a detailed technical specification of the system's architecture.","D. A use-case identifies a typical interaction with a system and the actors (human or computer) involved in that interaction."],"a":3},{"t":"What is illustrated in a UML sequence diagram?","c":["A. The immediate external environment of the system defining the system's context and the dependencies that a system has on its environment. The context model shows what is outside of the system boundary.","B. The actors involved , A description of the interactions , The data that is exchanged , The stimulus that triggers the use case ,The response of the system , Comments and other information","C. A sequence of interactions between the actors in a system's environment and the objects in the system itself. The sequence of interactions describes the implementation of a system feature or function.","D. An external perspective , An interaction perspective , A behavioral perspective , A structural perspective"],"a":2},{"t":"System modeling is ?","c":["A. Different view or perspective of that system","B. System using some kind of graphical notation which(UML)","C. The functionality of the system and models are used to communicate with customers","D. All of the above "],"a":3},{"t":"System perspectives is ?","c":["A. Interaction perspective , structural perspective , behavioral perspective ","B. UML ,Active ,State"],"a":0},{"t":"Structural perspective ?","c":["A. Where you model the interactions between a system and its environment, or between the components of a system","B. Where you model the organization of a system or the structure of the data that is processed by the system ","C. Where you model the dynamic behavior of the system and how it responds to events","D. None of the above"],"a":1},{"t":"Behavioral perspective is ?","c":["A. Where you model the interactions between a system and its environment, or between the components of a system","B. Where you model the organization of a system or the structure of the data that is processed by the system","C. Where you model the dynamic behavior of the system and how it responds to events ","D. None of the above"],"a":2},{"t":"Interaction perspective is ?","c":["A. Where you model the interactions between a system and its environment, or between the components of a system ","B. Where you model the organization of a system or the structure of the data that is processed by the system","C. Where you model the dynamic behavior of the system and how it responds to events","D. None of the above"],"a":0},{"t":"UML diagram types is ?","c":["A. Activity diagrams","B. Sequence diagrams","C. State diagrams","D. All of above"],"a":3},{"t":"Activity diagrams is ?","c":["A. Which show the activities involved in a process or in data processing . ","B. Which show the interactions between a system and its environment.","C. Which show interactions between actors and the system and between system components","D. Which show the object classes in the system and the associations between these classes"],"a":0},{"t":"Sequence diagrams is ?","c":["A. Which show the activities involved in a process or in data processing .","B. Which show the interactions between a system and its environment.","C. Which show interactions between actors and the system and between system components ","D. Which show the object classes in the system and the associations between these classes"],"a":2},{"t":"Use Case diagrams is ?","c":["A. Which show the activities involved in a process or in data processing .","B. Which show the interactions between a system and its environment. ","C. Which show interactions between actors and the system and between system components","D. Which show the object classes in the system and the associations between these classes"],"a":1},{"t":"Class diagrams is ?","c":["A. Which show the activities involved in a process or in data processing .","B. Which show the interactions between a system and its environment.","C. Which show interactions between actors and the system and between system components","D. Which show the object classes in the system and the associations between these classes "],"a":3},{"t":"State diagrams is ?","c":["A. Which show the activities involved in a process or in data processing .","B. Which show the interactions between a system and its environment.","C. which show how the system reacts to internal and external events.","D. Which show the object classes in the system and the associations between these classes"],"a":2},{"t":"Which the following  are used to illustrate the operational context of a system - they show what lies outside the system boundaries?","c":["A. Context ","B. Architectural models","C. Social and organisational concerns","D. All of the above"],"a":0},{"t":"Show the system and its relationship with other systems?","c":["A. Context","B. Architectural models ","C. Social and organisational concerns","D. All of the above"],"a":1},{"t":"Medical receptionist, patient records system (PRS)","c":["A. Message","B. Stimulus","C. Description","D. Actor "],"a":3},{"t":"Patient's personal information, treatment summary","c":["A. Data ","B. Stimulus","C. Description","D. Actor"],"a":0},{"t":"Confirmation that PRS has been updated?","c":["A. Response","B. Stimulus","C. Description","D. Actor"],"a":0},{"t":"Data Some data arrives that has to be processed by the system.","c":["A. True ","B. False"],"a":0},{"t":"Oven operation is enabled. Interior oven light is off. Display shows 'Ready to cook'.","c":["A. Enabled ","B. Set time","C. Waiting","D. Full power"],"a":0},{"t":"The cooking time is set to the user's input value. The display shows the cooking time selected and is updated as the time is set?","c":["A. Enabled","B. Set time ","C. Waiting","D. Full power"],"a":1},{"t":"The oven is waiting for input. The display shows the current time.","c":["A. Enabled","B. Set time","C. Waiting ","D. Full power"],"a":2},{"t":"The oven power is set to 600 watts. The display shows ?","c":["A. Enabled","B. Set time","C. Half power","D. Full power "],"a":3},{"t":"The oven power is set to 300 watts. The display shows ?","c":["A. Enabled","B. Set time","C. Half power ","D. Full power"],"a":2},{"t":"Acceptance testing: Stages in Process?","c":["A. Exhaustive system testing is impossible so testing policies which define the required system test coverage may be developed.","B. Customers test a system to decide whether or not it is ready to be accepted from the system developers and deployed in the customer environment. Primarily for custom systems.","C. Is the process of testing individual components in isolation , is a defect testing process.","D. Define acceptance criteria , Plan acceptance testing , Derive acceptance tests ,  Run acceptance tests , Negotiate test results ,Reject/accept system "],"a":3},{"t":"Development Testing: Unit Testing ?","c":["A. Unit testing , Component testing , System testing","B. Software components are often composite components that are made up of several interacting objects , Testing composite components should therefore focus on showing that the component interface behaves according to its specification.","C. Is a form of performance testing where the system is deliberately overloaded to test its failure behavior.","D. Is the process of testing individual components in isolation its defect testing process."],"a":3},{"t":"Types of User Testing: Alpha testing is ?","c":["A. Users of the software work with the development team to test the software at the developer's site. ","B. Alpha testing is conducted solely by external users without developer involvement.","C. The testing is done remotely without any direct interaction with the developers.","D. Users test the software in a live environment without any prior training."],"a":0},{"t":"Interface Testing is ?","c":["A. Objectives are to detect faults due to interface errors or invalid assumptions about interfaces.","B. The software should conform to its specification  , \"Are we building the product right\".","C. Involves examining each requirement and developing a test or tests for it.","D. Is a form of performance testing where the system is deliberately overloaded to test its failure behavior."],"a":0},{"t":"Testing policies?","c":["A. Policies which define the required system test coverage may be developed ","B. All system functions that are accessed through not  menus should be tested","C. Involves examining each requirement and developing a test or tests for it."],"a":0},{"t":"V & V Confidence: Marketing environment ?","c":["A. Early market entry guarantees the software will be successful.","B. Finding defects is always prioritized over the product's market launch.","C. The marketing strategy is irrelevant to the software's development timeline.","D. Getting a product to market early may be more important than finding defects in the program."],"a":3},{"t":"What are (3) Types of User Testing ?","c":["A. Unit testing , Component testing ,System testing","B. Validation Testing , Defect Testing","C. Alpha testing ,  Beta testing , Acceptance testing ","D. Involves examining each requirement and developing a test or tests for it."],"a":2},{"t":"What is Verification ?","c":["A. To demonstrate to the developer and the system customer that the software meets its requirements A successful test shows that the system operates as intended.","B. Usually involves planning a series of tests where the load is steadily increased until the system performance becomes unacceptable.","C. The software should conform to its specification  \"Are we building the product right\".","D. Is a stage in the testing process in which users or customers provide input and advice on system testing ,is essential, even when comprehensive system and release testing have been carried out."],"a":2},{"t":"Performance Testing: Stress testing ?","c":["A. Is a form of performance testing where the system is deliberately overloaded to test its failure behavior.","B. Tests the system under normal operating conditions to ensure stability.","C. Focuses on optimizing the software's response time under light loads.","D. Evaluates the software's usability by end-users."],"a":0},{"t":"V & V Confidence: User expectations","c":["A. Users may have low expectations of certain kinds of software.","B. Users expect software to be updated frequently, regardless of its quality.","C. Users have high expectations for all software regardless of its purpose.","D. Users always expect the software to be bug-free upon release."],"a":2},{"t":"What is Performance testing ?","c":["A. Concerned with analysis of the static system representation to discover problems (static verification) , May be supplement by tool-based document and code analysis.","B. Usually involves planning a series of tests where the load is steadily increased until the system performance becomes unacceptable.","C. Primarily assesses the security features of the software.","D. Focuses on testing the user interface under normal conditions."],"a":1},{"t":"What is the primary focus of Agile software development?","c":["A) Extensive documentation","B) Fast delivery and frequent updates","C) Rigid adherence to initial requirements","D) Minimal customer involvement"],"a":1},{"t":"Which statement aligns with the Agile Manifesto?","c":["A) Processes and tools over individuals and interactions","B) Comprehensive documentation over working software","C) Customer collaboration over contract negotiation","D) Following a plan over responding to changes"],"a":2},{"t":"In Agile methods, software is delivered in:","c":["A) One single final release","B) Increments with each iteration","C) Beta versions only","D) Quarterly updates only"],"a":1},{"t":"Which is not a principle of Agile development?","c":["A) Customer involvement","B) Incremental delivery","C) Extensive documentation","D) Embracing change"],"a":2},{"t":"Extreme Programming (XP) recommends all of the following practices except:","c":["A) Pair programming","B) Testlast development","C) Continuous integration","D) Refactoring"],"a":1},{"t":"Who is primarily responsible for the backlog in a Scrum project?","c":["A) Development team","B) ScrumMaster","C) Product Owner","D) Customer"],"a":2},{"t":"In Scrum, a 'Sprint' refers to:","c":["A) A single final delivery","B) A short, focused development cycle","C) A test cycle","D) Planning phase"],"a":1},{"t":"The main goal of 'Continuous Integration' in XP is to:","c":["A) Encourage isolated development","B) Incorporate changes only at the end","C) Merge and test changes frequently","D) Increase documentation"],"a":2},{"t":"Which of the following best describes 'TestDriven Development'?","c":["A) Writing code before creating any tests","B) Testing after final implementation","C) Writing tests before implementing functionality","D) Only unit testing without integration"],"a":2},{"t":"The ScrumMaster's role is to:","c":["A) Act as the project manager","B) Protect the team from outside interruptions","C) Make final decisions on system requirements","D) Manage customer requirements"],"a":1},{"t":"The Agile methodology values which of the following the most?","c":["A) Processes and tools","B) Following a strict plan","C) Individuals and interactions","D) Detailed documentation"],"a":2},{"t":"In Agile, what is the purpose of 'refactoring'?","c":["A) To finalize code design after testing","B) To rewrite the entire codebase regularly","C) To improve code structure without changing its behavior","D) To add extra features"],"a":2},{"t":"A 'user story' in Extreme Programming (XP) is primarily used for:","c":["A) Estimating project cost","B) Detailing customer requirements","C) Defining testing protocols","D) Scheduling tasks"],"a":1},{"t":"What is the goal of 'Incremental Delivery' in Agile?","c":["A) Deliver all software at once after development","B) Deliver software in pieces that can be evaluated by the customer","C) Develop code without customer feedback","D) Document all changes meticulously"],"a":1},{"t":"What does 'Pair Programming' involve?","c":["A) Writing code individually and reviewing it later","B) Two developers working on the same code together","C) A tester and developer working together","D) Two programmers working on separate tasks"],"a":1},{"t":"Which term describes the Agile practice of delivering a potentially shippable product at","c":["the end of each sprint?","A) Product increment","B) Full release","C) Continuous integration","D) Test increment"],"a":1},{"t":"Sustainable Pace' in XP refers to:","c":["A) Allowing overtime regularly","B) Maintaining a workload that can be sustained without burnout","C) Speeding up work as deadlines approach","D) Working long hours during the sprint"],"a":1},{"t":"Which of the following is not a component of the Agile Manifesto?","c":["A) Working software over comprehensive documentation","B) Following a strict plan over responding to change","C) Customer collaboration over contract negotiation","D) Individuals and interactions over processes and tools"],"a":1},{"t":"What is the primary purpose of the daily Scrum meeting?","c":["A) To review the previous sprint","B) To address personal goals of the team","C) To discuss progress, plan for the day, and address roadblocks","D) To conduct final code reviews"],"a":2},{"t":"In a Scrum project, the 'Product Owner' is responsible for:","c":["A) Managing the team's daily tasks","B) Identifying product features and prioritizing them","C) Tracking team's velocity","D) Conducting code reviews"],"a":1},{"t":"What is 'Velocity' in the context of Scrum?","c":["A) A measure of the team's work capacity in a sprint","B) The speed of code writing","C) The speed of sprint completion","D) The time taken to complete a task"],"a":0},{"t":"The term 'Continuous Integration' in Agile development refers to:","c":["A) Daily integration of only new code features","B) Merging and testing code frequently to avoid integration issues","C) Finalizing code before testing","D) Integrating customer feedback at the end of the project"],"a":1},{"t":"Agile methods are generally most effective for:","c":["A) Very large, multiyear projects with strict requirements","B) Projects with changing requirements and need for fast delivery","C) Projects requiring extensive regulatory compliance","D) Systems with static, unchanging requirements"],"a":1},{"t":"Which of the following is an Agile approach to managing complex requirements?","c":["A) Creating detailed upfront documentation","B) Using a flexible and iterative development process","C) Avoiding customer feedback until the end","D) Rigid adherence to a plan"],"a":1},{"t":"What is the purpose of 'test automation' in Agile?","c":["A) To eliminate manual testing","B) To ensure all unit tests pass before integration","C) To delay testing until the final phase","D) To conduct testing only at project completion"],"a":1},{"t":"In Scrum, a 'Product Backlog' consists of:","c":["A) Detailed design documents","B) Completed tasks only","C) A prioritized list of project tasks and requirements","D) Only user feedback notes"],"a":2},{"t":"Agile project management typically differs from plandriven management because it:","c":["A) Relies heavily on documentation","B) Follows strict milestones with minimal flexibility","C) Focuses on adaptability and iterative progress","D) Requires completion of all requirements upfront"],"a":2},{"t":"The ScrumMaster ensures that:","c":["A) The project follows traditional project management protocols","B) The Scrum process is followed and minimizes outside interference","C) Customer requirements are translated into code","D) Sprints are skipped if not necessary"],"a":1},{"t":"Which of these Agile practices emphasizes simplifying both design and code?","c":["A) Incremental delivery","B) Embrace change","C) Maintain simplicity","D) Sustainable pace"],"a":2},{"t":"The main focus of Agile methodologies is to:","c":["A) Develop comprehensive system documentation","B) Deliver functional software quickly and continuously","C) Reduce customer involvement","D) Avoid adapting to changing requirements"],"a":1},{"t":"What is the purpose of having a 'Sprint Review' at the end of each Scrum sprint?","c":["A) To plan the next sprint in detail","B) To review and demonstrate the completed work to stakeholders","C) To perform code refactoring","D) To create detailed documentation"],"a":1},{"t":"n Scrum, a 'Sprint Retrospective' primarily aims to:","c":["A) Refine user stories for the next sprint","B) Review team performance and improve processes","C) Finalize sprint documentation","D) Allocate next sprint's tasks"],"a":1},{"t":"What practice in XP encourages code simplicity and continuous improvement?","c":["A) Pair programming","B) Collective ownership","C) Refactoring","D) Customer involvement"],"a":2},{"t":"Which Agile principle focuses on customer presence and active engagement?","c":["A) Maintain simplicity","B) Embrace change","C) Incremental delivery","D) Customer involvement"],"a":3},{"t":"Incremental Planning' in XP involves:","c":["A) Creating detailed plans for the entire project","B) Planning and prioritizing in stages as the project progresses","C) Delaying planning until the end of development","D) Developing plans without customer input"],"a":1},{"t":"In Agile, why is 'testfirst development' important?","c":["A) It speeds up the coding process","B) It helps clarify requirements before coding begins","C) It avoids the need for manual testing","D) It encourages writing detailed documentation"],"a":1},{"t":"What is the challenge with Agile in large organizations with longestablished processes?","c":["A) Maintaining high levels of documentation","B) Adopting Agile while preserving traditional roles and processes","C) Writing code without tests","D) Avoiding customer feedback"],"a":1},{"t":"Agile development often relies on team members who are:","c":["A) Highly skilled and selforganizing","B) Focused on repetitive coding tasks","C) Subject to strict taskbased oversight","D) Disconnected from customer interactions"],"a":0},{"t":"Scrum of Scrums' is typically used in which context?","c":["A) XP for small teams","B) Managing largescale, multiteam Scrum projects","C) Finalizing individual sprint tasks","D) Plandriven software development"],"a":1},{"t":"What is one benefit of Agile's 'distributed Scrum'?","c":["A) All teams work in a single location","B) Teams collaborate effectively across locations","C) Teams do not interact","D) It uses no ScrumMaster"],"a":1}]